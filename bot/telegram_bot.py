from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, \
    filters, CallbackContext

import logging

from openai_helper import OpenAIClient
from tools import *
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

class GiftBot:
    """Telegram bot for managing birthdays."""
    # –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏ –º–µ—Ç–æ–¥ start –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    def __init__(self, config: dict, openai: OpenAIClient, google_search: GoogleSearchTool):
        self.config = config
        self.openai = openai
        self.google_search = google_search
    async def start(self, update: Update, context: CallbackContext) -> None:
        keyboard = [["‚öΩÔ∏è –°–ø–æ—Ä—Ç", "üè† –¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞"], ["üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "üß∏ –î–ª—è –¥–µ—Ç–µ–π"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True)
        await update.message.reply_text(
            "–ü—Ä–∏–≤–µ—Ç! –î–ª—è –Ω–∞—á–∞–ª–∞, –¥–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –ø–æ–¥–∞—Ä–∫–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–¥–∞—Ä–∫–∞.",
            reply_markup=reply_markup)

    async def handle_choice(self, update: Update, context: CallbackContext) -> None:
        choice = update.message.text
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        detailed_prompt = self.get_detailed_prompt(choice)

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —Å –ø–æ–º–æ—â—å—é OpenAI
        recommendations = self.openai.get_response(
            detailed_prompt)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ get_response —Ç–µ–ø–µ—Ä—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π

        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø–æ–∏—Å–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å—Å—ã–ª–æ–∫ —á–µ—Ä–µ–∑ Google CSE
        search_queries = self.google_search.parse_gpt_response(recommendations)
        message_texts = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
        for recommendation, query in zip(recommendations, search_queries):
            results = self.google_search.google_search(query)
            if results:
                # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
                result = results[0]
                print(result)
                message_texts.append(f"{recommendation} - [–°—Å—ã–ª–∫–∞]({result['link']})")
            else:
                message_texts.append(f"{recommendation} - –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        final_message = "\n\n".join(message_texts)
        await context.bot.send_message(chat_id=update.effective_chat.id, text=final_message, parse_mode='Markdown', disable_web_page_preview=True)



    def get_detailed_prompt(self, choice):
        prompts = {
            "‚öΩÔ∏è –°–ø–æ—Ä—Ç": "–ü—Ä–∏–¥—É–º–∞–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–¥–µ–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–∞ —Ç–µ–º—É —Å–ø–æ—Ä—Ç–∞ –∏ –∑–∞—Ç–µ–º –¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ. –ë—é–¥–∂–µ—Ç –¥–æ 5000 —Ä—É–±–ª–µ–π. –ü—Ä–∏–º–µ—Ä: –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π —Ä—é–∫–∑–∞–∫: –° –æ—Ç–¥–µ–ª–µ–Ω–∏—è–º–∏ –¥–ª—è –æ–±—É–≤–∏ –∏ –≤–ª–∞–∂–Ω—ã—Ö –≤–µ—â–µ–π, –∏–¥–µ–∞–ª–µ–Ω –¥–ª—è –ø–æ—Ö–æ–¥–æ–≤ –≤ —Å–ø–æ—Ä—Ç–∑–∞–ª.",
            "üè† –¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞": "–ü—Ä–∏–¥—É–º–∞–π –∏–¥–µ–∏ –ø–æ–¥–∞—Ä–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–ª—É—á—à–∞—Ç –¥–æ–º –∏–ª–∏ —Å–æ–∑–¥–∞–¥—É—Ç —É—é—Ç, –∏ –∑–∞—Ç–µ–º –¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ. –ë—é–¥–∂–µ—Ç –¥–æ 5000 —Ä—É–±–ª–µ–π. –ü—Ä–∏–º–µ—Ä: –£–º–Ω–∞—è –ª–∞–º–ø–æ—á–∫–∞: –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ—Å–≤–µ—â–µ–Ω–∏–µ –≤ –¥–æ–º–µ —Å –ø–æ–º–æ—â—å—é —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞, —Å–æ–∑–¥–∞–≤–∞—è —É—é—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.",
            "üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞": "–ü—Ä–∏–¥—É–º–∞–π –ø–æ–¥–∞—Ä–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π –∏ –Ω–æ–≤—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏, –∏ –∑–∞—Ç–µ–º –¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ. –ü—Ä–∏–º–µ—Ä: –ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏: –° –≤—ã—Å–æ–∫–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º –∑–≤—É–∫–∞ –∏ –¥–æ–ª–≥–∏–º –≤—Ä–µ–º–µ–Ω–µ–º —Ä–∞–±–æ—Ç—ã, –∏–¥–µ–∞–ª—å–Ω—ã –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –º—É–∑—ã–∫–∏ –∏ –ø–æ–¥–∫–∞—Å—Ç–æ–≤.",
            "üß∏ –î–ª—è –¥–µ—Ç–µ–π": "–ü—Ä–∏–¥—É–º–∞–π –∏–¥–µ–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –¥–µ—Ç–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏, –∏ –∑–∞—Ç–µ–º –¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ. –ü—Ä–∏–º–µ—Ä: –û–±—É—á–∞—é—â–∏–π —Ä–æ–±–æ—Ç: –ü–æ–º–æ–≥–∞–µ—Ç –¥–µ—Ç—è–º —É—á–∏—Ç—å—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é —á–µ—Ä–µ–∑ –∏–≥—Ä—É, —Ä–∞–∑–≤–∏–≤–∞—è –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏."

            }

        return prompts.get(choice, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")

    def run(self):
        """Runs the bot."""
        application = ApplicationBuilder() \
            .token(self.config['token']) \
            .build()

        category_filters = (
                filters.Regex(r'^‚öΩÔ∏è –°–ø–æ—Ä—Ç$') |
                filters.Regex(r'^üè† –¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞$') |
                filters.Regex(r'^üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞$') |
                filters.Regex(r'^üß∏ –î–ª—è –¥–µ—Ç–µ–π$')
        )
        application.add_handler(CommandHandler('start', self.start))
        application.add_handler(MessageHandler(filters.TEXT & category_filters, self.handle_choice))
        application.run_polling()